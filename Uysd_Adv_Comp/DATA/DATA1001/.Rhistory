#caffeine exhaustion time
caf0 = c(36.05,52.47,56.55,45.2,35.25,66.38,40.57,57.15,28.34)
caf13 = c(37.55,59.3,79.12,58.33,70.54,69.47,46.48,66.35,36.2)
#H0: mean exhaustion time with no caffeine = 45 (mins)
#H1: mean exhaustion time with no caffeine != 45 (mins)
teststat = (mean(caf0)-45)/(12/sqrt(length(caf0)))
teststat
2*pnorm(teststat, lower.tail = F)
#0.72 > 0.05, data appears consistent with the null hypothesis
#install.packages("tidyverse") 下载package
#library("tidyverse") 用package
getwd() #拿到此rmd的路径
dim(iris) #看dataset有几行 几列 (rows and columns)
names(iris) #拿到dataset的variables的名字 (column names)
#names(iris) = c('x1', 'x2', 'x3', 'x4', 'x5') 改这些名字
head(iris)  #看前6行data（6是r默认的，可以自己改 by adding n = 'x'）
tail(iris, n=3)  #看最后3行data
iris[5,1] #拿到第五行第一个data
var1 = iris$Sepal.Length #把var1这个variable从dataset提取出来，并起名叫var1
head(var1) #看前六个data
class(var1) #看这个variable是什么类型
length(var1) #看有多少个data
sum(var1) #所有var1的data的和，如果得到NA说明有missing value
sort(var1) #从小到大把dataset排序
sort(var1, decreasing = TRUE) #从大到小
sum(sort(var1)[1:5]) #拿到最小的五个data的和
as.character(iris$Sepal.Length[1:5]) #把numerical变成categorical，改了前五行要不然太多数字看着头疼
as.numeric(iris$Sepal.Length[1:5]) #把categorical变成numerical
table(iris$Sepal.Length) #每个category在数据中出现的次数
barplot(iris$Petal.Length[1:20]) #前20个数据画成bar plot，全画的话会密集恐惧症
hist(iris$Petal.Length) #画histogram
hist(iris$Petal.Length, freq = FALSE) #用probability densities画histogram
boxplot(iris$Sepal.Length, horizontal = TRUE) #把box plot横过来
plot(iris$Petal.Width, iris$Petal.Length) #scatter plot, 前面x后面y
library(ggplot2)
#bar plot
ggplot(iris, aes(x=factor(Sepal.Width), fill = Species)) + geom_bar() + #Sepal.Width是numerical所以要factor
ggtitle("Sepal Width by Species") + xlab("Sepal Width")
ggplot(iris, aes(x = Species, y = Petal.Width, fill = Species)) + geom_boxplot() +
theme(legend.position = 'none')
ggplot(iris, aes(x = Sepal.Width)) + geom_histogram(bins = 15)
ggplot(iris, aes(x = Species, y = Petal.Width, fill = Species)) + geom_boxplot() +
theme(legend.position = 'none')
mean(iris$Sepal.Length)
median(iris$Sepal.Length)
sd(iris$Sepal.Length)
library(rafalib)
popsd(iris$Sepal.Length)
var(iris$Sepal.Length)
IQR(iris$Sepal.Length)
#已知z-score是0.8，算normal curve下0.8左边的面积：
pnorm(0.8) #后面不写mean和sd的话默认standard normal curve (mean = 0, sd = 1)
pnorm(0.8, lower.tail = FALSE) #算0.8右边的面积，也可以
1-pnorm(0.8)
pnorm(0.6) - pnorm(0.1) #算这两个值中间的面积
pnorm(180, mean = 177, sd = 5) #自定义mean和sd
pnorm(180, 177, 5) #也可以直接写数字
qnorm(0.3, 177, 5) #已知面积，算z-score（也可以理解为 百分之三十的数据小于多少）
curve(dnorm(x), from = -3*1, to = 3*1,
xlab = "x", ylab = "Density", main = "Normal Distribution")
